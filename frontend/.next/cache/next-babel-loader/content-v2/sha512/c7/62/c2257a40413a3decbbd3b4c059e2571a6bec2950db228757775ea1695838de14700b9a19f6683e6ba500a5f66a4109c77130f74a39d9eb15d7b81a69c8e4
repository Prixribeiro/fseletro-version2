{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nexport default function Contact() {\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  const {\n    0: render,\n    1: setRender\n  } = useState(false);\n  const {\n    0: msg,\n    1: setMsg\n  } = useState({\n    formSave: false,\n    type: \"\",\n    message: \"\"\n  });\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    nome: \"\",\n    msg: \"\"\n  });\n  useEffect(() => {\n    async function fetchMyAPI() {\n      const response = await fetch(\"http://localhost:8080/mensagem\");\n      setMessages(await response.json());\n    }\n\n    fetchMyAPI();\n  }, [render]);\n\n  const onChangeInput = e => setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const sendForm = async e => {\n    e.preventDefault();\n\n    try {\n      const res = await fetch(\"http://localhost:8080/mensagem\", {\n        method: \"POST\",\n        body: JSON.stringify(formData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(dados => {\n        setRender(!render);\n        setFormData({\n          nome: \"\",\n          msg: \"\"\n        });\n      });\n      const responseEnv = await res.json();\n\n      if (responseEnv.error) {\n        setMsg({\n          formSave: false,\n          type: \"error\",\n          message: responseEnv.message\n        });\n      } else {\n        setMsg({\n          formSave: false,\n          type: \"success\",\n          message: responseEnv.message\n        });\n      }\n    } catch (err) {\n      setMsg({\n        formSave: false,\n        type: \"error\",\n        message: \"Erro: mensagem nÃ£o cadastrada, tente mais tarde!\"\n      });\n    }\n\n    setTimeout(() => {\n      setMsg(false);\n    }, 2000);\n  };\n\n  const formatDate = rawDate => {\n    const myDate = new Date(rawDate);\n    const d = myDate.getDay();\n    const mo = myDate.getMonth() + 1;\n    const y = myDate.getFullYear();\n    const h = myDate.getHours();\n    const mi = myDate.getMinutes();\n    return `${d}/${mo}/${y} - ${h}:${mi}`;\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        className: \"text-center\",\n        children: \"Fale Conosco\"\n      }), /*#__PURE__*/_jsx(\"hr\", {})]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"section d-flex justify-content-center my-5 row\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"contacts col-lg-3 col-md-4 col-sm-6 col-xs-9\",\n        children: [/*#__PURE__*/_jsx(\"h4\", {\n          className: \"text-center\",\n          children: \" Deixe sua mensagem\"\n        }), /*#__PURE__*/_jsx(\"form\", {\n          onSubmit: sendForm,\n          name: \"form\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              value: formData.nome,\n              onChange: onChangeInput,\n              type: \"text\",\n              className: \"form-control\",\n              id: \"nome\",\n              name: \"nome\",\n              placeholder: \"Nome:\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              value: formData.msg,\n              onChange: onChangeInput,\n              type: \"text\",\n              className: \"form-control\",\n              id: \"msg\",\n              name: \"msg\",\n              placeholder: \"Mensagem:\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"submit\",\n              name: \"submit\",\n              className: \"btn btn-block btn-success\",\n              value: \"Enviar\"\n            }), msg.type === \"success\" ? /*#__PURE__*/_jsx(\"div\", {\n              className: \"alert alert-success position-absolute mx-auto mt-4 w-50 text-center\",\n              role: \"alert\",\n              children: /*#__PURE__*/_jsx(\"span\", {\n                className: \"lead text-dark\",\n                children: msg.message\n              })\n            }) : \"\"]\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"messages col-lg-3 col-md-4 col-sm-6 col-xs-9\",\n        children: messages.map(row => /*#__PURE__*/_jsx(\"div\", {\n          className: \"media text-muted pt-3  border-bottom\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"media-body pb-3 mb-0 small lh-125 border-gray\",\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"d-flex justify-content-between align-items-center w-100\",\n              children: [/*#__PURE__*/_jsx(\"strong\", {\n                className: \"text-gray-dark display-5\",\n                children: row.nome\n              }), /*#__PURE__*/_jsx(\"p\", {\n                children: formatDate(row.data)\n              })]\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: \"d-block\",\n              children: row.msg\n            })]\n          })\n        }, messages.id))\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}